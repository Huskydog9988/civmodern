// Update Gradle Wrapper using: ./gradlew wrapper --distribution-type bin --gradle-version <version>
// See Gradle's releases here: https://gradle.org/releases/

plugins {
    id("fabric-loom") version "${loom_version}"
//    id("com.github.johnrengelman.shadow") version "7.1.2"
}

loom {
//    silentMojangMappingsLicense()
    mods {
        "modid" {
            sourceSet sourceSets.main
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings(loom.layered() {
        officialMojangMappings()
    })

    modCompileOnly("maven.modrinth:modmenu:lEkperf6")

    modImplementation "io.wispforest:owo-lib:${project.owo_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
    modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"
    include "io.wispforest:owo-sentinel:${project.owo_version}"
    implementation "org.xerial:sqlite-jdbc:3.49.1.0"
    compileOnly("com.github.luben:zstd-jni:1.5.7-4")
    implementation "com.github.luben:zstd-jni:1.5.7-3:linux_amd64"
    implementation "com.github.luben:zstd-jni:1.5.7-3:linux_aarch64"
    implementation "com.github.luben:zstd-jni:1.5.7-3:darwin_x86_64"
    implementation "com.github.luben:zstd-jni:1.5.7-3:darwin_aarch64"
    implementation "com.github.luben:zstd-jni:1.5.7-3:win_amd64"
    implementation "com.github.luben:zstd-jni:1.5.7-3:win_aarch64"
    loom {
        include("org.xerial:sqlite-jdbc:3.49.1.0")
        include("com.github.luben:zstd-jni:1.5.7-3:linux_amd64")
        include("com.github.luben:zstd-jni:1.5.7-3:linux_aarch64")
        include("com.github.luben:zstd-jni:1.5.7-3:darwin_x86_64")
        include("com.github.luben:zstd-jni:1.5.7-3:darwin_aarch64")
        include("com.github.luben:zstd-jni:1.5.7-3:win_amd64")
        include("com.github.luben:zstd-jni:1.5.7-3:win_aarch64")
    }
}

base {
    archivesName = project.archives_base_name
}
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        url "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
    maven { url 'https://maven.wispforest.io/releases/' }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    options.release = 21
}

java {
    withSourcesJar()
}

processResources {
    filesMatching("assets/civmodern/lang/en_us.json") {
        expand([
                "mod_name": project.mod_name,
        ])
    }
    filesMatching("fabric.mod.json") {
        expand([
                "mod_name"             : project.mod_name,
                "mod_version"          : project.mod_version,
                "mod_description"      : project.mod_description,
                "mod_home_url"         : project.mod_home_url,
                "mod_source_url"       : project.mod_source_url,
                "copyright_licence"    : project.copyright_licence,

                "minecraft_version"    : project.minecraft_version,
                "fabric_loader_version": project.fabric_loader_version,
        ])
        filter {
            (it as String).replace(
                    "\"%FABRIC_AUTHORS_ARRAY%\"",
                    new JsonBuilder((project.mod_authors as String).tokenize(",")).toString()
            )
        }
    }
}

//shadowJar {
//    zip64 = true
//    archiveClassifier = "dev-shadow"
//}

//remapJar {
//    input.set shadowJar.archiveFile
//    dependsOn shadowJar
//    archiveClassifier = "fabric"
//}

import groovy.json.JsonBuilder
import net.fabricmc.loom.task.RemapJarTask

tasks.register("remapCivMc", RemapJarTask) {
    inputFile.set jar.archiveFile
//    dependsOn shadowJar
    archiveClassifier = "civmc-fabric"
    from sourceSets.main.output
    from "civmc"
}

tasks.register("cleanJar", Delete) {
    delete fileTree("dist") {
        include "*-fabric.jar"
    }
}

tasks.register("copyJar", Copy) {
    dependsOn cleanJar
    from remapJar, remapCivMc
    into "dist"
}

build.dependsOn copyJar
